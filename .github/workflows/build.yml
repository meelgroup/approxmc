name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Release]
        staticcompile: [ON, OFF]
        c_compiler: [gcc]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          # - os: ubuntu-latest
          #   c_compiler: clang
          #   cpp_compiler: clang++
        # exclude:
        #   - os: windows-latest
        #     c_compiler: gcc
        #   - os: windows-latest
        #     c_compiler: clang
        #   - os: ubuntu-latest
        #     c_compiler: cl

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install python dependencies
      run: |
        pip install numpy lit

    - name: Install gmp for Mac
      if: matrix.os == 'macos-13'
      run: | 
        HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake
        HOMEBREW_NO_AUTO_UPDATE=1 brew install zlib
        wget https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
        tar xf gmp-6.3.0.tar.xz
        cd gmp-6.3.0
        ./configure --enable-static -enable-cxx --enable-shared
        make -j8
        sudo make install
        cd ..
  
    - name: Install mpfr for Mac
      if: matrix.os == 'macos-13'
      run: | 
        wget https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.xz 
        tar xf mpfr-4.2.1.tar.xz 
        cd mpfr-4.2.1
        ./configure --enable-static -enable-cxx --enable-shared
        make -j8
        sudo make install
        cd ..
    
    - name: Install dependencies for Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -yq help2man libgmp-dev libmpfr-dev
      
    - name: Checkout Cadical
      uses: actions/checkout@v4
      with:
        repository: meelgroup/cadical
        ref: add_dynamic_lib
        path: cadical
        
    - name: Build Cadical
      run: |
        cd cadical
        CXXFLAGS=-fPIC ./configure --competition
        make -j8
        cd ..

    - name: Checkout Cadiback
      uses: actions/checkout@v4
      with:
        repository: meelgroup/cadiback
        ref: synthesis
        path: cadiback
        
    - name: Build Cadiback
      run: |
        cd cadiback
        CXX=c++ ./configure
        make -j8
        cd ..
    
    - name: Checkout breakid
      uses: actions/checkout@v4
      with:
        repository: meelgroup/breakid
        ref: master
        path: breakid
        
    - name: Build Breakid
      run: |
        cd breakid
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=OFF -DSTATICCOMPILE=${{ matrix.staticcompile }} ..
        cd ../../

    - name: Checkout CMS
      uses: actions/checkout@v4
      with:
        repository: msoos/cryptominisat
        ref: synthesis
        path: cryptominisat
        submodules: 'true'
        
    - name: Build CMS
      run: |
        cd cryptominisat
        mkdir build &&cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=OFF -DSTATICCOMPILE=${{ matrix.staticcompile }} ..
        cmake --build . --config ${{matrix.build_type}}
        cd ../..

    - name: Checkout SBVA
      uses: actions/checkout@v4
      with:
        repository: meelgroup/SBVA
        ref: master
        path: sbva
        
    - name: Build SBVA
      run: |
        cd sbva
        mkdir build
        cd build
        ln -s ../scripts/*.sh .
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=OFF -DSTATICCOMPILE=${{ matrix.staticcompile }} ..
        cd ../..

    - name: Checkout cereal
      run: |
        wget https://github.com/USCiLab/cereal/archive/v1.3.2.tar.gz
    - name: Build cereal
      run: |
        tar xvf v1.3.2.tar.gz
        cd cereal-1.3.2
        mkdir build
        cd build
        cmake -DJUST_INSTALL_CEREAL=ON ..
        make -j6
        sudo make install

    - name: Checkout armadillo
      run: |
        wget https://sourceforge.net/projects/arma/files/armadillo-14.0.2.tar.xz
    - name: Build armadillo
      run: |
        tar xvf armadillo-14.0.2.tar.xz
        cd armadillo-14.0.2/
        ./configure
        make -j6
        sudo make install

    - name: Checkout ensmallen
      run: |
        wget https://ensmallen.org/files/ensmallen-2.21.1.tar.gz
    - name: Build ensmallen
      run: |
        tar xvf ensmallen-2.21.1.tar.gz
        cd ensmallen-2.21.1
        mkdir build
        cd build
        cmake ..
        cmake --build . --config ${{matrix.build_type}}
        sudo make install

    - name: Checkout mlpack
      uses: actions/checkout@v4
      with:
        repository: mlpack/mlpack
        ref: 4.4.0
        path: mlpack
    - name: Build mlpack
      run: |
        cd mlpack
        mkdir build
        cd build
        cmake -DBUILD_SHARED_LIBS=ON -DBUILD_CLI_EXECUTABLES=OFF ..
        cmake --build . --config ${{matrix.build_type}}
        sudo make install
      

    - uses: actions/checkout@v4
      with:
        path: project
        submodules: 'true'

    - name: Build project
      run: |
        cd project
        mkdir -p build && cd build
        cmake \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -DSTATICCOMPILE=${{ matrix.staticcompile }} \
        -S ..
        cmake --build . --config ${{matrix.build_type}}

    - name: Test
      run: ctest -C ${{matrix.build_type}} --verbose
